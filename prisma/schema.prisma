// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum userTypes {
  superadmin
  admin
  user
}

model User {
  id              String            @id @default(uuid())
  username        String            @unique
  hashedPassword  String
  userType        userTypes
  Project         Project[]
  insights_input  insights_input[]
  insights_output insights_output[]
}

model Project {
  id              String            @id @default(uuid())
  projectName     String
  projectOwnerId  String
  projectOwner    User              @relation(fields: [projectOwnerId], references: [id])
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  insights_input  insights_input[]
  insights_output insights_output[]
}

model insights_input {
  id        String  @id @default(uuid())
  text      String?
  userID    String
  user      User    @relation(fields: [userID], references: [id])
  projectId String
  Project   Project @relation(fields: [projectId], references: [id])
}

model insights_output {
  id               String    @id @default(uuid())
  summary          String?
  keyWords         String[]?
  brandBeliefs     String?
  brandPersonality String[]?
  brandBenefits    String[]?
  ReasonsToBelieve String[]?
  brandPosition    String?
  brandPromise     String?
  targetAudience   String[]?
  projectId        String
  Project          Project   @relation(fields: [projectId], references: [id])
  userID           String
  user             User      @relation(fields: [userID], references: [id])
}
